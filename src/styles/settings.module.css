.wrapper {
  position: absolute;
  top: 0;
  left: 0;
  min-height: 100%;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.605);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
}
.modal {
  background-color: white;
  border-radius: 1rem;
  padding-bottom: 3rem;
  position: relative;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 2px solid #e3e1e1;
  padding: 1.5rem 2rem;
}
.header > span {
  font-size: 1.6rem;
  font-weight: 700;
}
.closeBtn {
  font-size: 1.15rem;
  font-weight: 700;
  color: rgb(30, 33, 63);
  opacity: 0.5;
}

.properties {
  margin: 0 2rem;
  background-color: #e3e1e1;
  display: flex;
  flex-direction: column;
  gap: 1px;
}
.properties > div {
  background-color: white;
  padding: 1rem 0;
}
.propertyLabel {
  font-size: 0.85rem;
  font-weight: 700;
}

.modeWrapper {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  column-gap: 1rem;
  row-gap: 0.9rem;
}
.modeInputWrapper {
  display: flex;
  flex-direction: column;
  gap: 0.4rem;
}
.modeLabel {
  color: #999999;
  font-size: 0.8rem;
  font-weight: 600;
}
.propertyLabel:nth-of-type(1) {
  grid-column-start: 1;
  grid-column-end: 4;
}
.modeWarning {
  grid-column-start: 1;
  grid-column-end: 4;
  font-size: 0.85rem;
  font-weight: 600;
  color: red;
}

.fontWrapper,
.colorWrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.fonts,
.colors {
  display: flex;
}
.font,
.color {
  height: 2.5rem;
  width: 2.5rem;
  background-clip: content-box;
  padding: 0.3rem;
  border: 2px solid transparent;
  border-radius: 50%;
  box-sizing: content-box;
}
.font {
  background-color: #eff1fa;
}
.font::before {
  content: "Aa";
  font-weight: 600;
  font-size: 0.95rem;
}
.activeFont {
  background-color: #161932;
  color: white;
}
.font:nth-of-type(1) {
  font-family: var(--first-font);
}
.font:nth-of-type(2) {
  font-family: var(--second-font);
}
.font:nth-of-type(3) {
  font-family: var(--third-font);
}
.color::before {
  display: block; /* Inline elements can't be transformed, and pseudo elements are inline by default */
  content: "check";
  font-size: 1.35rem;
  transform: scale(0);
  transition: 0.2s;
}
.activeColor::before {
  transform: scale(1);
}
.color:nth-of-type(1) {
  background-color: var(--first-color);
}
.color:nth-of-type(2) {
  background-color: var(--second-color);
}
.color:nth-of-type(3) {
  background-color: var(--third-color);
}
.font:hover:not(.activeFont),
.color:hover:not(.activeColor) {
  border: 2px solid #e8ebfa;
}

.applyBtn {
  font-weight: 700;
  color: white;
  background-color: var(--selected-color);
  padding: 0.9rem 2.2rem;
  border-radius: 2rem;
  font-size: 0.9rem;
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 50%);
}
.applyBtn::before {
  transition: 0.2s;
  content: "";
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  border-radius: 2rem;
}

@media (hover: hover) {
  .closeBtn:hover {
    opacity: 1;
  }
  .applyBtn:hover::before {
    background-color: rgba(255, 255, 255, 0.2);
  }
}
@media (width<580px) {
  .modal {
    width: 90vw;
    padding-bottom: 1.5rem;
  }
  .modeWrapper {
    grid-template-columns: auto;
  }
  .propertyLabel:nth-of-type(1) {
    grid-column-start: 1;
    grid-column-end: 2;
    text-align: center;
  }
  .modeWarning {
    grid-column-start: 1;
    grid-column-end: 2;
  }
  .modeInputWrapper {
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
  .fontWrapper,
  .colorWrapper {
    flex-direction: column;
    gap: 0.2rem;
  }
}
